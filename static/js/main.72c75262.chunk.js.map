{"version":3,"sources":["sounds/ready.mp3","sounds/steady.mp3","sounds/work.mp3","sounds/rest.mp3","sounds/congratulations.mp3","components/TimerSettings/Intervals/Intervals.js","components/TimerSettings/Timing/Timing.js","utils/getWorkoutTime.js","components/TimerSettings/WorkoutDuration/WorkoutDuration.js","components/TimerSettings/SoundsSettings/SoundsSettings.js","components/TimerSettings/TimerSettings.js","components/WorkoutStatus/RemainingTime/RemainingTime.js","components/WorkoutStatus/StatusText/StatusText.js","components/WorkoutStatus/WorkoutStatus.js","components/Bars/Bars.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Intervals","_ref","inputOnChange","intervals","react_default","a","createElement","className","type","onChange","e","name","value","min","max","required","Timing","work","rest","placeholder","getWorkoutTime","time","seconds","minutes","Math","floor","hours","concat","WorkoutDuration","duration","Sounds","soundsAvailable","dispatch","checked","payload","target","TimerSettings","start","state","onSubmit","TimerSettings_Intervals_Intervals","TimerSettings_Timing_Timing","TimerSettings_WorkoutDuration_WorkoutDuration","SoundsSettings","RemainingTime","currentInterval","remainingTime","StatusText","progressStatusClass","progressStatusText","WorkoutStatus","react","WorkoutStatus_RemainingTime_RemainingTime","WorkoutStatus_StatusText_StatusText","Bars","bars","map","bar","index","key","style","width","reducer","action","newSettings","JSON","parse","localStorage","settings","Object","objectSpread","defineProperty","field","stringify","working","text","class","readySound","Audio","ready","steadySound","steady","workSound","restSound","congratulationsSound","congratulations","noSleep","noSleepLibrary","initialState","undefined","App","_useReducer","useReducer","_useReducer2","slicedToArray","ball","useRef","playSound","sound","play","currentTime","useEffect","push","components_TimerSettings_TimerSettings","preventDefault","enable","current","animation","setTimeout","timer","remainingTimerReducer","setInterval","turn","updateText","newInterval","delay","nextRoundTime","clearInterval","disable","parseInt","components_WorkoutStatus_WorkoutStatus","components_Bars_Bars","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.72c75262.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ready.f0341389.mp3\";","module.exports = __webpack_public_path__ + \"static/media/steady.fdf3d26b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/work.e06f877e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rest.aacde6dd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/congratulations.2e45e984.mp3\";","import React from \"react\";\r\n\r\nconst Intervals = ({ inputOnChange, intervals }) => (\r\n  <div className=\"intervals\">\r\n    Intervals:\r\n    <input\r\n      type=\"number\"\r\n      onChange={e => inputOnChange(e)}\r\n      name=\"intervals\"\r\n      value={intervals}\r\n      min=\"1\"\r\n      max=\"100\"\r\n      required\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Intervals;\r\n","import React from \"react\";\r\n\r\nconst Timing = ({ inputOnChange, work, rest }) => (\r\n  <section className=\"timing\">\r\n    <section className=\"timing-work\">\r\n      <label>\r\n        Work <span>(s)</span>\r\n      </label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={e => inputOnChange(e)}\r\n        name=\"work\"\r\n        value={work}\r\n        placeholder=\"15 s\"\r\n        min=\"1\"\r\n        required\r\n      />\r\n    </section>\r\n    <section className=\"timing-rest\">\r\n      <label>\r\n        Rest <span>(s)</span>\r\n      </label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={e => inputOnChange(e)}\r\n        name=\"rest\"\r\n        value={rest}\r\n        placeholder=\"45 s\"\r\n        min=\"1\"\r\n        required\r\n      />\r\n    </section>\r\n  </section>\r\n);\r\n\r\nexport default Timing;\r\n","export default function getWorkoutTime(time) {\r\n  let seconds = time % 60;\r\n  if (seconds < 10) seconds = \"0\" + seconds;\r\n  let minutes = Math.floor(time / 60);\r\n  let hours = Math.floor(time / 3600);\r\n  if (time >= 3600) {\r\n    minutes = minutes % 60;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  } else {\r\n    return `${minutes}:${seconds}`;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport getWorkoutTime from \"../../../utils/getWorkoutTime\";\r\n\r\nconst WorkoutDuration = ({ duration }) => (\r\n  <div className=\"workout-duration\">\r\n    <em>Workout Duration:</em>\r\n    <strong>{getWorkoutTime(duration)}</strong>\r\n  </div>\r\n);\r\n\r\nexport default WorkoutDuration;\r\n","import React from \"react\";\r\n\r\nconst Sounds = ({ soundsAvailable, dispatch }) => (\r\n  <div className=\"sounds\">\r\n    <em>Sounds:</em>\r\n    <input\r\n      type=\"checkbox\"\r\n      name=\"sounds\"\r\n      checked={soundsAvailable}\r\n      onChange={e =>\r\n        dispatch({ type: \"toggleSounds\", payload: e.target.checked })\r\n      }\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Sounds;\r\n","import React from \"react\";\r\n\r\nimport Intervals from \"./Intervals/Intervals\";\r\nimport Timing from \"./Timing/Timing\";\r\nimport WorkoutDuration from \"./WorkoutDuration/WorkoutDuration\";\r\nimport SoundsSettings from \"./SoundsSettings/SoundsSettings\";\r\n\r\nconst TimerSettings = ({ start, inputOnChange, state, dispatch }) => (\r\n  <form onSubmit={start} className=\"timer-settings\">\r\n    <Intervals inputOnChange={inputOnChange} intervals={state.intervals} />\r\n    <Timing inputOnChange={inputOnChange} work={state.work} rest={state.rest} />\r\n    <WorkoutDuration duration={state.duration} />\r\n    <SoundsSettings\r\n      soundsAvailable={state.soundsAvailable}\r\n      dispatch={dispatch}\r\n    />\r\n    <div className=\"start\">\r\n      <button type=\"submit\">Start</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default TimerSettings;\r\n","import React from \"react\";\r\nimport getWorkoutTime from \"../../../utils/getWorkoutTime\";\r\n\r\nconst RemainingTime = ({ currentInterval, intervals, remainingTime }) => (\r\n  <div className=\"remaining-time\">\r\n    <span>\r\n      {currentInterval} / {intervals}\r\n    </span>\r\n    <span>{getWorkoutTime(remainingTime)}</span>\r\n  </div>\r\n);\r\n\r\nexport default RemainingTime;\r\n","import React from \"react\";\r\n\r\nconst StatusText = ({ progressStatusClass, progressStatusText }) => (\r\n  <p className={`status ${progressStatusClass}`}>{progressStatusText}</p>\r\n);\r\n\r\nexport default StatusText;\r\n","import React, { Fragment } from \"react\";\r\nimport RemainingTime from \"./RemainingTime/RemainingTime\";\r\nimport StatusText from \"./StatusText/StatusText\";\r\n\r\nconst WorkoutStatus = ({ state }) => (\r\n  <Fragment>\r\n    <RemainingTime\r\n      currentInterval={state.currentInterval}\r\n      intervals={state.intervals}\r\n      remainingTime={state.remainingTime}\r\n    />\r\n    <StatusText\r\n      progressStatusClass={state.progressStatusClass}\r\n      progressStatusText={state.progressStatusText}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default WorkoutStatus;\r\n","import React from \"react\";\r\n\r\nconst Bars = ({ bars }) =>\r\n  bars.map((bar, index) => (\r\n    <div\r\n      key={index}\r\n      className={`bar ${bar.type === \"rest\" ? \"rest\" : \"work\"}`}\r\n      style={{ width: bar.width + \"%\" }}\r\n    />\r\n  ));\r\n\r\nexport default Bars;\r\n","export default function reducer(state, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"updateInput\":\r\n      let newSettings = JSON.parse(localStorage.settings);\r\n      newSettings = {\r\n        ...newSettings,\r\n        [payload.field]: payload.value\r\n      };\r\n      localStorage.settings = JSON.stringify(newSettings);\r\n      return {\r\n        ...state,\r\n        [payload.field]: payload.value\r\n      };\r\n    case \"updateBars\":\r\n      const { bars, duration } = payload;\r\n      return {\r\n        ...state,\r\n        bars: bars,\r\n        duration: duration\r\n      };\r\n    case \"startWorkout\":\r\n      return {\r\n        ...state,\r\n        working: true,\r\n        remainingTime: state.duration\r\n      };\r\n    case \"setWorkingStatus\":\r\n      return {\r\n        ...state,\r\n        progressStatusText: payload.text,\r\n        progressStatusClass: payload.class\r\n      };\r\n    case \"nextInterval\": {\r\n      return {\r\n        ...state,\r\n        currentInterval: state.currentInterval + 1\r\n      };\r\n    }\r\n    case \"remainingTypeReduceSecond\":\r\n      return {\r\n        ...state,\r\n        remainingTime: state.remainingTime - 1\r\n      };\r\n    case \"finishWorkout\":\r\n      return {\r\n        ...state,\r\n        working: false,\r\n        currentInterval: 0\r\n      };\r\n    case \"getSettings\":\r\n      const settings = JSON.parse(localStorage.settings);\r\n      return {\r\n        ...state,\r\n        intervals: settings.intervals,\r\n        rest: settings.rest,\r\n        work: settings.work,\r\n        soundsAvailable: settings.soundsAvailable\r\n      };\r\n    case \"toggleSounds\": {\r\n      const settings = JSON.parse(localStorage.settings);\r\n      settings.soundsAvailable = payload;\r\n      localStorage.settings = JSON.stringify(settings);\r\n      return {\r\n        ...state,\r\n        soundsAvailable: payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Fragment, useReducer, useEffect, useRef } from \"react\";\r\nimport \"./scss/main.css\";\r\n\r\nimport TimerSettings from \"./components/TimerSettings/TimerSettings\";\r\nimport WorkoutStatus from \"./components/WorkoutStatus/WorkoutStatus\";\r\nimport Bars from \"./components/Bars/Bars\";\r\n\r\nimport noSleepLibrary from \"nosleep.js\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nimport ready from \"./sounds/ready.mp3\";\r\nimport steady from \"./sounds/steady.mp3\";\r\nimport work from \"./sounds/work.mp3\";\r\nimport rest from \"./sounds/rest.mp3\";\r\nimport congratulations from \"./sounds/congratulations.mp3\";\r\n\r\nconst readySound = new Audio(ready);\r\nconst steadySound = new Audio(steady);\r\nconst workSound = new Audio(work);\r\nconst restSound = new Audio(rest);\r\nconst congratulationsSound = new Audio(congratulations);\r\n\r\nconst noSleep = new noSleepLibrary();\r\n\r\nconst initialState = {\r\n  intervals: 3,\r\n  currentInterval: 0,\r\n  work: 15,\r\n  rest: 45,\r\n  working: false,\r\n  duration: undefined,\r\n  remainingTime: undefined,\r\n  bars: [],\r\n  progressStatusText: \"\",\r\n  progressStatusClass: \"\",\r\n  soundsAvailable: true\r\n};\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const ball = useRef();\r\n\r\n  function inputOnChange(e) {\r\n    if (e.target.value !== \"\" && e.target.value !== \"0\") {\r\n      const value = parseInt(e.target.value);\r\n      e.target.value = value;\r\n      const field = [e.target.name];\r\n      dispatch({ type: \"updateInput\", payload: { field, value } });\r\n    }\r\n  }\r\n\r\n  function playSound(sound) {\r\n    if (state.soundsAvailable) {\r\n      sound.play();\r\n      sound.currentTime = 0;\r\n    }\r\n  }\r\n\r\n  function start(e) {\r\n    e.preventDefault();\r\n\r\n    noSleep.enable();\r\n\r\n    ball.current.style.animation = `pushBall ${state.duration}s linear 3s`;\r\n\r\n    dispatch({ type: \"startWorkout\" });\r\n    dispatch({\r\n      type: \"setWorkingStatus\",\r\n      payload: { text: \"Ready\", class: \"white\" }\r\n    });\r\n    playSound(readySound);\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"setWorkingStatus\",\r\n        payload: { text: \"Steady\", class: \"white\" }\r\n      });\r\n      playSound(steadySound);\r\n    }, 1500);\r\n    setTimeout(() => {\r\n      dispatch({ type: \"nextInterval\" });\r\n      let remainingTimerReducer = setInterval(() => {\r\n        dispatch({\r\n          type: \"remainingTypeReduceSecond\"\r\n        });\r\n      }, 1000);\r\n\r\n      let timer;\r\n      let turn = \"Work\";\r\n\r\n      function changeTurn() {\r\n        turn = turn === \"Work\" ? \"Rest\" : \"Work\";\r\n      }\r\n\r\n      function updateText() {\r\n        dispatch({\r\n          type: \"setWorkingStatus\",\r\n          payload: {\r\n            text: turn,\r\n            class: turn === \"Work\" ? \"red\" : \"green\"\r\n          }\r\n        });\r\n      }\r\n\r\n      function playRoundMusic() {\r\n        if (turn === \"Work\") {\r\n          playSound(workSound);\r\n          dispatch({ type: \"nextInterval\" });\r\n        } else {\r\n          if (state.intervals > 1) {\r\n            playSound(restSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      let newInterval = delay => {\r\n        timer = setTimeout(() => {\r\n          changeTurn();\r\n          updateText();\r\n          const nextRoundTime = turn === \"Work\" ? state.work : state.rest;\r\n          playRoundMusic();\r\n          clearInterval(timer);\r\n          newInterval(nextRoundTime);\r\n        }, delay * 1000);\r\n      };\r\n\r\n      updateText();\r\n      newInterval(state.work);\r\n      playSound(workSound);\r\n\r\n      setTimeout(() => {\r\n        noSleep.disable();\r\n        ball.current.style.animation = \"\";\r\n        dispatch({ type: \"finishWorkout\" });\r\n        clearInterval(remainingTimerReducer);\r\n        dispatch({\r\n          type: \"setWorkingStatus\",\r\n          payload: {\r\n            text: \"\",\r\n            class: \"white\"\r\n          }\r\n        });\r\n        playSound(congratulationsSound);\r\n        clearInterval(timer);\r\n      }, state.duration * 1000);\r\n    }, 3000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest } = state;\r\n\r\n    let bars = [];\r\n\r\n    const duration = intervals * (rest + work) - rest;\r\n\r\n    for (let index = 0; index < intervals; index++) {\r\n      bars.push({\r\n        type: \"work\",\r\n        width: (work / duration) * 100\r\n      });\r\n      if (index + 1 < intervals) {\r\n        bars.push({\r\n          type: \"rest\",\r\n          width: (rest / duration) * 100\r\n        });\r\n      }\r\n    }\r\n    dispatch({ type: \"updateBars\", payload: { bars, duration } });\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.intervals, state.work, state.rest]);\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest, soundsAvailable } = state;\r\n    if (localStorage.settings === undefined) {\r\n      localStorage.settings = JSON.stringify({\r\n        intervals,\r\n        work,\r\n        rest,\r\n        soundsAvailable\r\n      });\r\n    } else {\r\n      dispatch({ type: \"getSettings\" });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {state.working === false ? (\r\n        <TimerSettings\r\n          start={start}\r\n          inputOnChange={inputOnChange}\r\n          state={state}\r\n          dispatch={dispatch}\r\n        />\r\n      ) : (\r\n        <Fragment>\r\n          <WorkoutStatus state={state} />\r\n        </Fragment>\r\n      )}\r\n\r\n      <div className=\"progress\">\r\n        <Bars bars={state.bars} />\r\n        <div className=\"ball\" ref={ball} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}