{"version":3,"sources":["sounds/work.mp3","sounds/ready.mp3","sounds/steady.mp3","sounds/rest.mp3","sounds/congratulations.mp3","components/TimerSettings/Intervals/Intervals.js","components/TimerSettings/Timing/Timing.js","utils/getWorkoutTime.js","components/TimerSettings/WorkoutDuration/WorkoutDuration.js","components/TimerSettings/SoundsSettings/SoundsSettings.js","components/TimerSettings/TimerSettings.js","components/WorkoutStatus/RemainingTime/RemainingTime.js","components/WorkoutStatus/StatusText/StatusText.js","components/WorkoutStatus/WorkoutStatus.js","components/Bars/Bars.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Intervals","_ref","inputOnChange","intervals","react_default","a","createElement","className","type","onChange","e","name","value","min","max","required","Timing","work","rest","placeholder","getWorkoutTime","time","undefined","seconds","minutes","Math","floor","hours","concat","WorkoutDuration","duration","Sounds","soundsAvailable","toggleSounds","dispatch","useStoreActions","actions","checked","target","TimerSettings","start","state","updateInput","parseInt","field","onSubmit","TimerSettings_Intervals_Intervals","TimerSettings_Timing_Timing","TimerSettings_WorkoutDuration_WorkoutDuration","SoundsSettings","RemainingTime","currentInterval","remainingTime","StatusText","progressStatusClass","progressStatusText","WorkoutStatus","react","WorkoutStatus_RemainingTime_RemainingTime","WorkoutStatus_StatusText_StatusText","Bars","bars","map","bar","index","key","style","width","store","createStore","working","action","payload","newSettings","JSON","parse","localStorage","settings","Object","objectSpread","defineProperty","stringify","updateBars","startWorkout","setWorkingStatus","text","class","nextInterval","remainingTypeReduceSecond","finishWorkout","getSettings","noSleep","noSleepLibrary","App","useStoreState","_useStoreActions","ball","useRef","playSound","src","Audio","play","useEffect","push","components_TimerSettings_TimerSettings","preventDefault","enable","current","animation","readySound","setTimeout","steadySound","timer","remainingTimerReducer","setInterval","turn","updateText","newInterval","delay","nextRoundTime","workSound","restSound","clearInterval","disable","congratulationsSound","components_WorkoutStatus_WorkoutStatus","components_Bars_Bars","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","easy_peasy_esm","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d3030df2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/work.317b5feb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ready.ab35e130.mp3\";","module.exports = __webpack_public_path__ + \"static/media/steady.60cba476.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rest.9b6c6a7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/congratulations.7d1710f9.mp3\";","import React from \"react\";\r\n\r\nconst Intervals = ({ inputOnChange, intervals }) => (\r\n  <div className=\"intervals\">\r\n    Intervals:\r\n    <input\r\n      type=\"number\"\r\n      onChange={e => inputOnChange(e)}\r\n      name=\"intervals\"\r\n      value={intervals}\r\n      min=\"1\"\r\n      max=\"100\"\r\n      required\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Intervals;\r\n","import React from \"react\";\r\n\r\nconst Timing = ({ inputOnChange, work, rest }) => (\r\n  <section className=\"timing\">\r\n    <section className=\"timing-work\">\r\n      <label>\r\n        Work <span>(s)</span>\r\n      </label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={e => inputOnChange(e)}\r\n        name=\"work\"\r\n        value={work}\r\n        placeholder=\"15 s\"\r\n        min=\"1\"\r\n        required\r\n      />\r\n    </section>\r\n    <section className=\"timing-rest\">\r\n      <label>\r\n        Rest <span>(s)</span>\r\n      </label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={e => inputOnChange(e)}\r\n        name=\"rest\"\r\n        value={rest}\r\n        placeholder=\"45 s\"\r\n        min=\"1\"\r\n        required\r\n      />\r\n    </section>\r\n  </section>\r\n);\r\n\r\nexport default Timing;\r\n","export default function getWorkoutTime(time) {\r\n  if (time === undefined) {\r\n    return \"\";\r\n  } else {\r\n    let seconds = time % 60;\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n    let minutes = Math.floor(time / 60);\r\n    let hours = Math.floor(time / 3600);\r\n    if (time >= 3600) {\r\n      minutes = minutes % 60;\r\n      if (minutes < 10) minutes = \"0\" + minutes;\r\n      return `${hours}:${minutes}:${seconds}`;\r\n    } else {\r\n      return `${minutes}:${seconds}`;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport getWorkoutTime from \"../../../utils/getWorkoutTime\";\r\n\r\nconst WorkoutDuration = ({ duration }) => (\r\n  <div className=\"workout-duration\">\r\n    <em>Workout Duration:</em>\r\n    <strong>{getWorkoutTime(duration)}</strong>\r\n  </div>\r\n);\r\n\r\nexport default WorkoutDuration;\r\n","import React from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nconst Sounds = ({ soundsAvailable, dispatch }) => {\r\n  const { toggleSounds } = useStoreActions((actions) => actions);\r\n\r\n  return (\r\n    <div className=\"sounds\">\r\n      <em>Sounds:</em>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"sounds\"\r\n        checked={soundsAvailable}\r\n        onChange={(e) => toggleSounds(e.target.checked)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sounds;\r\n","import React from \"react\";\r\n\r\nimport Intervals from \"./Intervals/Intervals\";\r\nimport Timing from \"./Timing/Timing\";\r\nimport WorkoutDuration from \"./WorkoutDuration/WorkoutDuration\";\r\nimport SoundsSettings from \"./SoundsSettings/SoundsSettings\";\r\n\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nconst TimerSettings = ({ start, state, dispatch }) => {\r\n  const { updateInput } = useStoreActions((actions) => actions);\r\n\r\n  function inputOnChange(e) {\r\n    if (e.target.value !== \"\" && e.target.value !== \"0\") {\r\n      const value = parseInt(e.target.value);\r\n      e.target.value = value;\r\n      const field = [e.target.name];\r\n      updateInput({ field, value });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={start} className=\"timer-settings\">\r\n      <Intervals inputOnChange={inputOnChange} intervals={state.intervals} />\r\n      <Timing\r\n        inputOnChange={inputOnChange}\r\n        work={state.work}\r\n        rest={state.rest}\r\n      />\r\n      <WorkoutDuration duration={state.duration} />\r\n      <SoundsSettings\r\n        soundsAvailable={state.soundsAvailable}\r\n        dispatch={dispatch}\r\n      />\r\n      <div className=\"start\">\r\n        <button type=\"submit\">Start</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TimerSettings;\r\n","import React from \"react\";\r\nimport getWorkoutTime from \"../../../utils/getWorkoutTime\";\r\n\r\nconst RemainingTime = ({ currentInterval, intervals, remainingTime }) => (\r\n  <div className=\"remaining-time\">\r\n    <span>\r\n      {currentInterval} / {intervals}\r\n    </span>\r\n    <span>{getWorkoutTime(remainingTime)}</span>\r\n  </div>\r\n);\r\n\r\nexport default RemainingTime;\r\n","import React from \"react\";\r\n\r\nconst StatusText = ({ progressStatusClass, progressStatusText }) => (\r\n  <p className={`status ${progressStatusClass}`}>{progressStatusText}</p>\r\n);\r\n\r\nexport default StatusText;\r\n","import React, { Fragment } from \"react\";\r\nimport RemainingTime from \"./RemainingTime/RemainingTime\";\r\nimport StatusText from \"./StatusText/StatusText\";\r\n\r\nconst WorkoutStatus = ({ state }) => (\r\n  <Fragment>\r\n    <RemainingTime\r\n      currentInterval={state.currentInterval}\r\n      intervals={state.intervals}\r\n      remainingTime={state.remainingTime}\r\n    />\r\n    <StatusText\r\n      progressStatusClass={state.progressStatusClass}\r\n      progressStatusText={state.progressStatusText}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default WorkoutStatus;\r\n","import React from \"react\";\r\n\r\nconst Bars = ({ bars }) =>\r\n  bars.map((bar, index) => (\r\n    <div\r\n      key={index}\r\n      className={`bar ${bar.type === \"rest\" ? \"rest\" : \"work\"}`}\r\n      style={{ width: bar.width + \"%\" }}\r\n    />\r\n  ));\r\n\r\nexport default Bars;\r\n","import { createStore, action } from \"easy-peasy\";\r\n\r\nconst store = createStore({\r\n  intervals: 3,\r\n  currentInterval: 0,\r\n  work: 15,\r\n  rest: 45,\r\n  working: false,\r\n  duration: undefined,\r\n  remainingTime: undefined,\r\n  bars: [],\r\n  progressStatusText: \"\",\r\n  progressStatusClass: \"\",\r\n  soundsAvailable: true,\r\n  updateInput: action((state, payload) => {\r\n    const { field, value } = payload;\r\n\r\n    let newSettings = JSON.parse(localStorage.settings);\r\n    newSettings = {\r\n      ...newSettings,\r\n      [field]: value,\r\n    };\r\n    localStorage.settings = JSON.stringify(newSettings);\r\n    state[field] = value;\r\n  }),\r\n  updateBars: action((state, payload) => {\r\n    const { bars, duration } = payload;\r\n\r\n    state.bars = bars;\r\n    state.duration = duration;\r\n  }),\r\n  startWorkout: action((state) => {\r\n    state.working = true;\r\n    state.remainingTime = state.duration;\r\n  }),\r\n  setWorkingStatus: action((state, payload) => {\r\n    state.progressStatusText = payload.text;\r\n    state.progressStatusClass = payload.class;\r\n  }),\r\n  nextInterval: action((state) => {\r\n    state.currentInterval = state.currentInterval + 1;\r\n  }),\r\n  remainingTypeReduceSecond: action((state) => {\r\n    state.remainingTime = state.remainingTime - 1;\r\n  }),\r\n  finishWorkout: action((state) => {\r\n    state.working = false;\r\n    state.currentInterval = 0;\r\n  }),\r\n  getSettings: action((state, payload) => {\r\n    const settings = JSON.parse(localStorage.settings);\r\n\r\n    state.intervals = settings.intervals;\r\n    state.rest = settings.rest;\r\n    state.work = settings.work;\r\n    state.soundsAvailable = settings.soundsAvailable;\r\n  }),\r\n  toggleSounds: action((state, payload) => {\r\n    const settings = JSON.parse(localStorage.settings);\r\n    settings.soundsAvailable = payload;\r\n    localStorage.settings = JSON.stringify(settings);\r\n    state.soundsAvailable = payload;\r\n  }),\r\n});\r\n\r\nexport default store;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./scss/main.css\";\r\n\r\nimport TimerSettings from \"./components/TimerSettings/TimerSettings\";\r\nimport WorkoutStatus from \"./components/WorkoutStatus/WorkoutStatus\";\r\nimport Bars from \"./components/Bars/Bars\";\r\n\r\nimport noSleepLibrary from \"nosleep.js\";\r\n\r\nimport readySound from \"./sounds/ready.mp3\";\r\nimport steadySound from \"./sounds/steady.mp3\";\r\nimport workSound from \"./sounds/work.mp3\";\r\nimport restSound from \"./sounds/rest.mp3\";\r\nimport congratulationsSound from \"./sounds/congratulations.mp3\";\r\n\r\nimport { StoreProvider, useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nimport store from \"./store\";\r\n\r\nconst noSleep = new noSleepLibrary();\r\n\r\nconst App = () => {\r\n  const state = useStoreState((state) => state);\r\n\r\n  const {\r\n    updateBars,\r\n    startWorkout,\r\n    setWorkingStatus,\r\n    nextInterval,\r\n    remainingTypeReduceSecond,\r\n    finishWorkout,\r\n    getSettings,\r\n  } = useStoreActions((actions) => actions);\r\n\r\n  const ball = useRef();\r\n\r\n  const playSound = (src) => {\r\n    if (state.soundsAvailable) {\r\n      var audio = new Audio(src);\r\n      audio.play();\r\n    }\r\n  };\r\n\r\n  function start(e) {\r\n    e.preventDefault();\r\n\r\n    noSleep.enable();\r\n\r\n    ball.current.style.animation = `pushBall ${state.duration}s linear 3s`;\r\n\r\n    startWorkout();\r\n    setWorkingStatus({ text: \"Ready\", class: \"white\" });\r\n    playSound(readySound);\r\n    setTimeout(() => {\r\n      setWorkingStatus({ text: \"Steady\", class: \"white\" });\r\n      playSound(steadySound);\r\n    }, 1500);\r\n    setTimeout(() => {\r\n      nextInterval();\r\n      let remainingTimerReducer = setInterval(() => {\r\n        remainingTypeReduceSecond();\r\n      }, 1000);\r\n\r\n      let timer;\r\n      let turn = \"Work\";\r\n\r\n      function changeTurn() {\r\n        turn = turn === \"Work\" ? \"Rest\" : \"Work\";\r\n      }\r\n\r\n      function updateText() {\r\n        setWorkingStatus({\r\n          text: turn,\r\n          class: turn === \"Work\" ? \"red\" : \"green\",\r\n        });\r\n      }\r\n\r\n      function playRoundMusic() {\r\n        if (turn === \"Work\") {\r\n          playSound(workSound);\r\n          nextInterval();\r\n        } else {\r\n          if (state.intervals > 1) {\r\n            playSound(restSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      let newInterval = (delay) => {\r\n        timer = setTimeout(() => {\r\n          changeTurn();\r\n          updateText();\r\n          const nextRoundTime = turn === \"Work\" ? state.work : state.rest;\r\n          playRoundMusic();\r\n          clearInterval(timer);\r\n          newInterval(nextRoundTime);\r\n        }, delay * 1000);\r\n      };\r\n\r\n      updateText();\r\n      newInterval(state.work);\r\n      playSound(workSound);\r\n\r\n      setTimeout(() => {\r\n        noSleep.disable();\r\n        ball.current.style.animation = \"\";\r\n        finishWorkout();\r\n        clearInterval(remainingTimerReducer);\r\n        setWorkingStatus({\r\n          text: \"\",\r\n          class: \"white\",\r\n        });\r\n        playSound(congratulationsSound);\r\n        clearInterval(timer);\r\n      }, state.duration * 1000);\r\n    }, 3000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest } = state;\r\n\r\n    let bars = [];\r\n\r\n    const duration = intervals * (rest + work) - rest;\r\n\r\n    for (let index = 0; index < intervals; index++) {\r\n      bars.push({\r\n        type: \"work\",\r\n        width: (work / duration) * 100,\r\n      });\r\n      if (index + 1 < intervals) {\r\n        bars.push({\r\n          type: \"rest\",\r\n          width: (rest / duration) * 100,\r\n        });\r\n      }\r\n    }\r\n    updateBars({ bars, duration });\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.intervals, state.work, state.rest]);\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest, soundsAvailable } = state;\r\n    if (localStorage.settings === undefined) {\r\n      localStorage.settings = JSON.stringify({\r\n        intervals,\r\n        work,\r\n        rest,\r\n        soundsAvailable,\r\n      });\r\n    } else {\r\n      getSettings();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const start = () => {};\r\n  // const inputOnChange = () => {};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {state.working === false ? (\r\n        <TimerSettings start={start} state={state} />\r\n      ) : (\r\n        <WorkoutStatus state={state} />\r\n      )}\r\n\r\n      <div className=\"progress\">\r\n        <Bars bars={state.bars} />\r\n        <div className=\"ball\" ref={ball} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <StoreProvider store={store}>\r\n    <App />\r\n  </StoreProvider>\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}