{"version":3,"sources":["reducer.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","payload","Object","objectSpread","defineProperty","field","value","bars","duration","intervals","rest","work","working","initialState","undefined","App","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","ball","useRef","inputOnChange","e","target","parseInt","name","useEffect","index","push","width","react_default","a","createElement","className","onSubmit","preventDefault","current","style","animation","concat","setTimeout","onChange","min","required","placeholder","seconds","minutes","Math","floor","hours","getWorkoutTime","map","bar","key","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d09bd79.chunk.js","sourcesContent":["export default function reducer(state, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"updateInput\":\r\n      return {\r\n        ...state,\r\n        [payload.field]: payload.value\r\n      };\r\n    case \"updateBars\":\r\n      return {\r\n        ...state,\r\n        bars: payload,\r\n        duration: state.intervals * (state.rest + state.work)\r\n      };\r\n    case \"startWorkout\":\r\n      return {\r\n        ...state,\r\n        working: true\r\n      };\r\n    case \"finishWorkout\":\r\n      return {\r\n        ...state,\r\n        working: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useReducer, useEffect, useRef } from \"react\";\nimport \"./scss/main.css\";\n\nimport reducer from \"./reducer\";\n\nconst initialState = {\n  intervals: 3,\n  work: 15,\n  rest: 45,\n  working: false,\n  duration: undefined,\n  bars: []\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const ball = useRef();\n\n  function inputOnChange(e) {\n    if (e.target.value !== \"\" && e.target.value !== \"0\") {\n      const value = parseInt(e.target.value);\n      e.target.value = value;\n      const field = [e.target.name];\n      dispatch({ type: \"updateInput\", payload: { field, value } });\n    }\n  }\n\n  function start(e) {\n    e.preventDefault();\n\n    ball.current.style.animation = `pushBall ${state.duration}s linear`;\n\n    dispatch({ type: \"startWorkout\" });\n    setTimeout(() => {\n      ball.current.style.animation = \"\";\n      dispatch({ type: \"finishWorkout\" });\n    }, state.duration * 1000);\n  }\n\n  function getWorkoutTime() {\n    let seconds = state.duration % 60;\n    if (seconds < 10) seconds = \"0\" + seconds;\n    let minutes = Math.floor(state.duration / 60);\n    let hours = Math.floor(state.duration / 3600);\n    if (state.duration >= 3600) {\n      minutes = minutes % 60;\n      if (minutes < 10) minutes = \"0\" + minutes;\n      return `${hours}:${minutes}:${seconds}`;\n    } else {\n      return `${minutes}:${seconds}`;\n    }\n  }\n\n  useEffect(() => {\n    const { intervals, work, rest } = state;\n\n    let bars = [];\n    for (let index = 0; index < intervals; index++) {\n      bars.push(\n        {\n          type: \"rest\",\n          width: (100 / intervals) * (rest / (rest + work))\n        },\n        {\n          type: \"work\",\n          width: (100 / intervals) * (work / (rest + work))\n        }\n      );\n    }\n    dispatch({ type: \"updateBars\", payload: bars });\n\n    // eslint-disable-next-line\n  }, [state.intervals, state.work, state.rest]);\n\n  return (\n    <div className=\"App\">\n      {state.working === false ? (\n        <form onSubmit={start}>\n          <div className=\"intervals\">\n            Intervals:\n            <input\n              type=\"number\"\n              onChange={e => inputOnChange(e)}\n              name=\"intervals\"\n              value={state.intervals}\n              min=\"1\"\n              required\n            />\n          </div>\n          <div className=\"rest-work\">\n            <section className=\"rest\">\n              <label>\n                Rest <span>(s)</span>\n              </label>\n              <input\n                type=\"number\"\n                onChange={e => inputOnChange(e)}\n                name=\"rest\"\n                value={state.rest}\n                placeholder=\"45 s\"\n                min=\"1\"\n                required\n              />\n            </section>\n            <section className=\"work\">\n              <label>\n                Work <span>(s)</span>\n              </label>\n              <input\n                type=\"number\"\n                onChange={e => inputOnChange(e)}\n                name=\"work\"\n                value={state.work}\n                placeholder=\"15 s\"\n                min=\"1\"\n                required\n              />\n            </section>\n          </div>\n          <div className=\"duration\">\n            <em>Workout Duration:</em>\n            <strong>{getWorkoutTime()}</strong>\n          </div>\n          <div className=\"start\">\n            <button>Start</button>\n          </div>\n        </form>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"progress\">\n        {state.bars.map((bar, index) => (\n          <div\n            key={index}\n            className={`bar ${bar.type === \"rest\" ? \"rest\" : \"work\"}`}\n            style={{ width: bar.width + \"%\" }}\n          />\n        ))}\n        <div className=\"ball\" ref={ball} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}