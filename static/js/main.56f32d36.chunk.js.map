{"version":3,"sources":["sounds/ready.mp3","sounds/steady.mp3","sounds/work.mp3","sounds/rest.mp3","sounds/congratulations.mp3","reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","reducer","state","action","type","payload","newSettings","JSON","parse","localStorage","settings","Object","objectSpread","defineProperty","field","value","stringify","bars","duration","working","progressStatusText","text","progressStatusClass","class","intervals","rest","work","soundsAvailable","readySound","Audio","ready","steadySound","steady","workSound","restSound","congratulationsSound","congratulations","noSleep","noSleepLibrary","initialState","undefined","App","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","ball","useRef","inputOnChange","e","target","parseInt","name","playSound","sound","play","currentTime","useEffect","index","push","width","react_default","a","createElement","className","onSubmit","preventDefault","enable","current","style","animation","concat","setTimeout","timer","turn","updateText","subtractingTimer","setInterval","console","log","newInterval","delay","nextRoundTime","clearInterval","disable","onChange","min","required","placeholder","seconds","minutes","Math","floor","hours","getWorkoutTime","checked","map","bar","key","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.56f32d36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ready.f0341389.mp3\";","module.exports = __webpack_public_path__ + \"static/media/steady.fdf3d26b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/work.e06f877e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rest.aacde6dd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/congratulations.2e45e984.mp3\";","export default function reducer(state, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"updateInput\":\r\n      let newSettings = JSON.parse(localStorage.settings);\r\n      newSettings = {\r\n        ...newSettings,\r\n        [payload.field]: payload.value\r\n      };\r\n      localStorage.settings = JSON.stringify(newSettings);\r\n      return {\r\n        ...state,\r\n        [payload.field]: payload.value\r\n      };\r\n    case \"updateBars\":\r\n      const { bars, duration } = payload;\r\n      return {\r\n        ...state,\r\n        bars: bars,\r\n        duration: duration\r\n      };\r\n    case \"startWorkout\":\r\n      return {\r\n        ...state,\r\n        working: true\r\n      };\r\n    case \"setWorkingStatus\":\r\n      return {\r\n        ...state,\r\n        progressStatusText: payload.text,\r\n        progressStatusClass: payload.class\r\n      };\r\n    case \"finishWorkout\":\r\n      return {\r\n        ...state,\r\n        working: false\r\n      };\r\n    case \"getSettings\":\r\n      const settings = JSON.parse(localStorage.settings);\r\n      return {\r\n        ...state,\r\n        intervals: settings.intervals,\r\n        rest: settings.rest,\r\n        work: settings.work,\r\n        soundsAvailable: settings.soundsAvailable\r\n      };\r\n    case \"toggleSounds\": {\r\n      const settings = JSON.parse(localStorage.settings);\r\n      settings.soundsAvailable = payload;\r\n      localStorage.settings = JSON.stringify(settings);\r\n      return {\r\n        ...state,\r\n        soundsAvailable: payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useReducer, useEffect, useRef } from \"react\";\r\nimport \"./scss/main.css\";\r\n\r\nimport noSleepLibrary from \"nosleep.js\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nimport ready from \"./sounds/ready.mp3\";\r\nimport steady from \"./sounds/steady.mp3\";\r\nimport work from \"./sounds/work.mp3\";\r\nimport rest from \"./sounds/rest.mp3\";\r\nimport congratulations from \"./sounds/congratulations.mp3\";\r\n\r\nconst readySound = new Audio(ready);\r\nconst steadySound = new Audio(steady);\r\nconst workSound = new Audio(work);\r\nconst restSound = new Audio(rest);\r\nconst congratulationsSound = new Audio(congratulations);\r\n\r\nconst noSleep = new noSleepLibrary();\r\n\r\nconst initialState = {\r\n  intervals: 3,\r\n  work: 15,\r\n  rest: 45,\r\n  working: false,\r\n  duration: undefined,\r\n  bars: [],\r\n  progressStatusText: \"\",\r\n  progressStatusClass: \"\",\r\n  soundsAvailable: true\r\n};\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const ball = useRef();\r\n\r\n  function inputOnChange(e) {\r\n    if (e.target.value !== \"\" && e.target.value !== \"0\") {\r\n      const value = parseInt(e.target.value);\r\n      e.target.value = value;\r\n      const field = [e.target.name];\r\n      dispatch({ type: \"updateInput\", payload: { field, value } });\r\n    }\r\n  }\r\n\r\n  function playSound(sound) {\r\n    if (state.soundsAvailable) {\r\n      sound.play();\r\n      sound.currentTime = 0;\r\n    }\r\n  }\r\n\r\n  function start(e) {\r\n    e.preventDefault();\r\n\r\n    noSleep.enable();\r\n\r\n    ball.current.style.animation = `pushBall ${state.duration}s linear 3s`;\r\n\r\n    dispatch({ type: \"startWorkout\" });\r\n    dispatch({\r\n      type: \"setWorkingStatus\",\r\n      payload: { text: \"Ready\", class: \"white\" }\r\n    });\r\n    playSound(readySound);\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"setWorkingStatus\",\r\n        payload: { text: \"Steady\", class: \"white\" }\r\n      });\r\n      playSound(steadySound);\r\n    }, 1500);\r\n    setTimeout(() => {\r\n      // runSound.play();\r\n\r\n      let timer;\r\n      let turn = \"Work\";\r\n\r\n      function changeTurn() {\r\n        turn = turn === \"Work\" ? \"Rest\" : \"Work\";\r\n      }\r\n\r\n      function updateText() {\r\n        dispatch({\r\n          type: \"setWorkingStatus\",\r\n          payload: {\r\n            text: turn,\r\n            class: turn === \"Work\" ? \"red\" : \"green\"\r\n          }\r\n        });\r\n      }\r\n\r\n      function playRoundMusic() {\r\n        if (turn === \"Work\") {\r\n          playSound(workSound);\r\n        } else {\r\n          playSound(restSound);\r\n        }\r\n      }\r\n\r\n      let subtractingTimer = setInterval(() => {\r\n        console.log(state.duration);\r\n        dispatch({ type: \"subtractingSecond\" });\r\n      }, 1000);\r\n\r\n      let newInterval = delay => {\r\n        timer = setTimeout(() => {\r\n          changeTurn();\r\n          updateText();\r\n          const nextRoundTime = turn === \"Work\" ? state.work : state.rest;\r\n          playRoundMusic();\r\n          clearInterval(timer);\r\n          newInterval(nextRoundTime);\r\n        }, delay * 1000);\r\n      };\r\n\r\n      updateText();\r\n      newInterval(state.work);\r\n      playSound(workSound);\r\n\r\n      setTimeout(() => {\r\n        noSleep.disable();\r\n        ball.current.style.animation = \"\";\r\n        dispatch({ type: \"finishWorkout\" });\r\n        clearInterval(subtractingTimer);\r\n        dispatch({\r\n          type: \"setWorkingStatus\",\r\n          payload: {\r\n            text: \"\",\r\n            class: \"white\"\r\n          }\r\n        });\r\n        playSound(congratulationsSound);\r\n        clearInterval(timer);\r\n      }, state.duration * 1000);\r\n    }, 3000);\r\n  }\r\n\r\n  function getWorkoutTime() {\r\n    let seconds = state.duration % 60;\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n    let minutes = Math.floor(state.duration / 60);\r\n    let hours = Math.floor(state.duration / 3600);\r\n    if (state.duration >= 3600) {\r\n      minutes = minutes % 60;\r\n      if (minutes < 10) minutes = \"0\" + minutes;\r\n      return `${hours}:${minutes}:${seconds}`;\r\n    } else {\r\n      return `${minutes}:${seconds}`;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest } = state;\r\n\r\n    let bars = [];\r\n\r\n    const duration = intervals * (rest + work) - rest;\r\n\r\n    for (let index = 0; index < intervals; index++) {\r\n      bars.push({\r\n        type: \"work\",\r\n        width: (work / duration) * 100\r\n      });\r\n      if (index + 1 < intervals) {\r\n        bars.push({\r\n          type: \"rest\",\r\n          width: (rest / duration) * 100\r\n        });\r\n      }\r\n    }\r\n    dispatch({ type: \"updateBars\", payload: { bars, duration } });\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.intervals, state.work, state.rest]);\r\n\r\n  useEffect(() => {\r\n    const { intervals, work, rest, soundsAvailable } = state;\r\n    if (localStorage.settings === undefined) {\r\n      localStorage.settings = JSON.stringify({\r\n        intervals,\r\n        work,\r\n        rest,\r\n        soundsAvailable\r\n      });\r\n    } else {\r\n      dispatch({ type: \"getSettings\" });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {state.working === false ? (\r\n        <form onSubmit={start}>\r\n          <div className=\"intervals\">\r\n            Intervals:\r\n            <input\r\n              type=\"number\"\r\n              onChange={e => inputOnChange(e)}\r\n              name=\"intervals\"\r\n              value={state.intervals}\r\n              min=\"1\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"rest-work\">\r\n            <section className=\"work\">\r\n              <label>\r\n                Work <span>(s)</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                onChange={e => inputOnChange(e)}\r\n                name=\"work\"\r\n                value={state.work}\r\n                placeholder=\"15 s\"\r\n                min=\"1\"\r\n                required\r\n              />\r\n            </section>\r\n            <section className=\"rest\">\r\n              <label>\r\n                Rest <span>(s)</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                onChange={e => inputOnChange(e)}\r\n                name=\"rest\"\r\n                value={state.rest}\r\n                placeholder=\"45 s\"\r\n                min=\"1\"\r\n                required\r\n              />\r\n            </section>\r\n          </div>\r\n          <div className=\"duration\">\r\n            <em>Workout Duration:</em>\r\n            <strong>{getWorkoutTime()}</strong>\r\n          </div>\r\n          <p className=\"sounds\">\r\n            <em>Sounds:</em>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"sounds\"\r\n              checked={state.soundsAvailable}\r\n              onChange={e =>\r\n                dispatch({ type: \"toggleSounds\", payload: e.target.checked })\r\n              }\r\n            />\r\n          </p>\r\n          <div className=\"start\">\r\n            <button>Start</button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {state.progressStatusText ? (\r\n        <p className={`status ${state.progressStatusClass}`}>\r\n          {state.progressStatusText}\r\n        </p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"progress\">\r\n        {state.bars.map((bar, index) => (\r\n          <div\r\n            key={index}\r\n            className={`bar ${bar.type === \"rest\" ? \"rest\" : \"work\"}`}\r\n            style={{ width: bar.width + \"%\" }}\r\n          />\r\n        ))}\r\n        <div className=\"ball\" ref={ball} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}